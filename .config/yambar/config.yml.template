# ; -*-yaml-*-
elac: &elac {
  stack: [
    background: {          color: !?element-bgff},
    border:     { size: 2, color: !?innerff},
    border:     { size: 1, color: !?borderff},
    underline:  { size: 1, color: !?shadowff},
    overline:   { size: 1, color: !?highlightff}
  ]
}

el: &el {
  stack: [
    background: {          color: !?element-bgff},
    border:     { size: 3, color: !?inactive-innerff},
    border:     { size: 2, color: !?inactive-borderff},
    underline:  { size: 2, color: !?inactive-shadowff},
    overline:   { size: 2, color: !?inactive-highlightff},
    overline:   { size: 1, color: !?inactive-innerff},
    border:     { size: 1, color: !?element-bgff}
  ]
}


# This is THE bar configuration
bar:
  height: 26
  location: top
  spacing: 1
  margin: 0
  layer: bottom
  # Default font
  font: cozette:pixelsize=13

  foreground: !?element-fgff
  background: !?backgrounddf

    
  border: {
    width: 3,
    color: 00000000,
    margin: 0
  }

  left:
    - i3:
        anchors: # Not used (directly) by f00bar; used here to avoid duplicationa
          - string: &i3_common {margin: 0, on-click: "swaymsg --quiet workspace {name}"}
          - string: &default {<<: *i3_common, text: "  {name}  "}
          - focused: &focused
              deco: *elac
              foreground: !?accentff
          - invisible: &invisible {deco: *el}
          - urgent: &urgent
              foreground: 000000ff
              deco: {stack: [background: {color: bc2b3fff}]}
          - map: &i3_mode
              default:
                - string:
                    margin: 4
                    text: "{mode}"
                    deco: *el
                - empty: {right-margin: 7}
              conditions:
                mode == default: {empty: {}}
        content:
          "":
            map:
              conditions:
                state == focused:   {string: {<<: [*default, *focused]}}
                state == unfocused: {string: {<<: *default}}
                state == invisible: {string: {<<: [*default, *invisible]}}
                state == urgent:    {string: {<<: [*default, *urgent]}}
        sort: native
        strip-workspace-numbers: yes
    !?yambar-spacer
    - i3:
        content:
          "":
            map:
              default: {string: {text: ""}}
              conditions:
                state == focused: {
                  string: {
                    text: " {mode} ",
                    deco: *el
                  }
                }


    - foreign-toplevel:
        content:
          map:
            conditions:
              ~activated: {empty: {}}
              activated:
                - string: {text: " {app-id} ", deco: *el}

    - foreign-toplevel:
        content:
          map:
            conditions:
              ~activated: {empty: {}}
              activated:
                - string: {text: " {title} ", deco: *el}

#    !?yambar-spacer
  center:
    - clock: {
       time-format: "%H:%M",
        date-format: "%-d.%-m.%-y",
        content: { string: {
            text: " {time} {date} ",
            deco: *el
        }}
      }


  right:
#    - script:
#        path: /home/ntk/bin/yambar-acpid
#        content:
#          - string:
#              text: " {acpi} "
#              deco: *el
#    - script:
#        path: /home/ntk/bin/yambar-uptime
#        content:
#          - string:
#              text: " {up} "
#              deco: *el

#    !?yambar-spacer
    - alsa:
        card: hw:1
        mixer: Master
        content:
          map:
            deco: *el
            conditions:
              ~online: {string: {text:  }}
              online:
                map:
                  #on-click: /bin/sh -c "amixer -q sset Speaker unmute && amixer -q sset Headphone unmute && amixer -q sset Master toggle"
                  conditions:
                    muted: {string: {text: "  ﱝ  ", foreground: !?commentff}}
                    ~muted:
                      ramp:
                        tag: percent
                        items:
                          - string: {text: " {percent}%  "}
                          - string: {text: " {percent}%  "}
                          - string: {text: " {percent}%  "}
    - backlight:
        name: amdgpu_bl0
        content:
          [string: {text: " {percent}%  ", deco: *el}]


    - removables:
        anchors:
          drive: &drive { deco: *el, text: "  "}
          optical: &optical {deco: *el, text: }
        spacing: 5
        content:
          map:
            conditions:
              ~mounted:
                map:
                  conditions:
                    ~optical: [{string: {deco: *el,text: " {device} | {label} "}}]
                    optical: [{string: {deco: *el, text: " {label} o "}}]
              mounted:
                map:
                  conditions:
                    ~optical:
                      #Ψ
#                      - string: {<<: *drive, deco: *el}
                      - string: {deco: *el,text: " {device} > {mount_point} | {label} "}
                    optical:
                      - string: {<<: *optical, deco: *el}
                      - string: {text: "{label}"}
        
    - network:
        content:
          map:
            default: {empty: {}}
            conditions:
              name == eno1:
                map:
                  deco: *el
                  conditions:
                    ~carrier: {empty: {}}
                    carrier:
                      map:
                        default: {string: {text: "  "}}
                        conditions:
                          state == up && ipv4 != "": {string: {text: " {name} {ipv4} "}}
    - network:
        poll-interval: 1000
        content:
          map:
            default: {empty: {}}
            conditions:
              name == wlo1:
                map:
                  deco: *el
                  default: {string: {text: "  "}}
                  conditions:
                    state == down: {empty: {}}
                    state == up:
                      map:
                        default:
                          - string: {text: " {ipv4}  "}

                        conditions:
                          ipv4 == "":
                            - string: {text: , foreground: ffffff66}
                            - string: {text: "{ssid} {dl-speed:mb}/{ul-speed:mb} Mb/s", foreground: ffffff66}
#    !?yambar-spacer
#    - disk-io:
#        poll-interval: 1000
#        content:
#          map:
#            conditions:
#              device == Total:
#                list:
#                  items:
#                    - map:
#                        deco: *el                        
#                        default: {string: {text: " read: {read_speed} B/s "}}
#                        conditions:
#                          read_speed > 1073741824:
#                            string: {text: " read: {read_speed:gib} GiB/s "}
#                          read_speed > 1048576:
#                            string: {text: " read: {read_speed:mib} MiB/s "}
#                          read_speed > 1024:
#                            string: {text: "read: {read_speed:kib} KiB/s "}
#                    - map:
#                        deco: *el
#                        default: {string: {text: " write: {write_speed} B/s "}}
#                        conditions:
#                          write_speed > 1073741824:
#                            string: {text: " write: {write_speed:gib} GiB/s "}
#                          write_speed > 1048576:
#                            string: {text: " write: {write_speed:mib} MiB/s "}
#                          write_speed > 1024:
#                            string: {text: " write: {write_speed:kib} KiB/s "}
#    - cpu: {
#        poll-interval: 5000,
#        content: { map: { conditions: { id < 0: { string: {
#              text: " {cpu}%  ",
#              deco: *el
#        }}}}}
#      }
#      
#    - mem: {
#        poll-interval: 5000,
#        content: { string: {
#          text: " {used:mib}MiB Ξ ",
#          deco: *el
#        }}
#      }
#
#    - script:
#        path: /home/ntk/bin/yambar-temperature
#        args: [--poll-interval, 2000]
#        content:
#          - string:
#              text: " {temperature}°C " #
#              deco: *el
#
#    - script:
#        path: /home/ntk/bin/yambar-watt
#        content:
#          - string:
#              text: " {watt}W  "
#              deco: *el
    !?yambar-spacer
    - battery:
        name: BAT1
        poll-interval: 360
        anchors:
          discharging: &discharging
            list:
              items:
                - string: {text: " {capacity}% "}
                - ramp:
                    tag: capacity
                    items:
                      - string: {text: " ", foreground: !?badff}
                      - string: {text: " ", foreground: !?badff}
                      - string: {text: " "}
                      - string: {text: " "}
                      - string: {text: " "}
                      - string: {text: " "}
                      - string: {text: " "}
                      - string: {text: " "}
                      - string: {text: " "}
                      - string: {text: " "}
        content:
          map:
            deco: *el
            conditions:
              state == unknown:
                <<: *discharging
              state == discharging:
                <<: *discharging
              state == charging:
                - string: {text: " + {capacity}% ", foreground: !?accentff}
                - ramp:
                    tag: capacity
                    items:
                      - string: {text: " ", foreground: !?accentff}
                      - string: {text: " ", foreground: !?accentff}
                      - string: {text: " ", foreground: !?accentff}
                      - string: {text: " ", foreground: !?accentff}
                      - string: {text: " ", foreground: !?accentff}
                      - string: {text: " ", foreground: !?accentff}
                      - string: {text: " ", foreground: !?accentff}
                      - string: {text: " ", foreground: !?accentff}
                      - string: {text: " ", foreground: !?accentff}
                      - string: {text: " ", foreground: !?accentff}

              state == full:
                - string: {text: " {capacity}%  ", foreground: !?accentff}
              state == "not charging":
                - ramp:
                    tag: capacity
                    items:
                      - string: {text:  , foreground: ff0000ff}
                      - string: {text:  , foreground: ffa600ff}
                      - string: {text:  , foreground: 00ff00ff}
                      - string: {text:  , foreground: 00ff00ff}
                      - string: {text:  , foreground: 00ff00ff}
                      - string: {text:  , foreground: 00ff00ff}
                      - string: {text:  , foreground: 00ff00ff}
                      - string: {text:  , foreground: 00ff00ff}
                      - string: {text:  , foreground: 00ff00ff}
                      - string: {text:  , foreground: 00ff00ff}
                - string: {text: " {capacity}% "}
